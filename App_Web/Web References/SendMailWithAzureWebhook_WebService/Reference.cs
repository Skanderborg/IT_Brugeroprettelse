//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace App_Web.SendMailWithAzureWebhook_WebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SendMail_WebServiceSoap", Namespace="http://Skanderborg.dk/xml/Schemas")]
    public partial class SendMail_WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail_BasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail_CcAndBccOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail_DefaultSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail_AttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMail_CalendarBookingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SendMail_WebService() {
            this.Url = global::App_Web.Properties.Settings.Default.App_Web_SendMailWithAzureWebhook_WebService_SendMail_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event SendMail_BasicCompletedEventHandler SendMail_BasicCompleted;
        
        /// <remarks/>
        public event SendMail_CcAndBccCompletedEventHandler SendMail_CcAndBccCompleted;
        
        /// <remarks/>
        public event SendMail_DefaultSignatureCompletedEventHandler SendMail_DefaultSignatureCompleted;
        
        /// <remarks/>
        public event SendMail_AttachmentsCompletedEventHandler SendMail_AttachmentsCompleted;
        
        /// <remarks/>
        public event SendMail_CalendarBookingCompletedEventHandler SendMail_CalendarBookingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail(AzureMailModel azureMailModel, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail", new object[] {
                        azureMailModel,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAsync(AzureMailModel azureMailModel, string azureWebhookURL) {
            this.SendMailAsync(azureMailModel, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(AzureMailModel azureMailModel, string azureWebhookURL, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        azureMailModel,
                        azureWebhookURL}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail_Basic", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail_Basic(string to, string subject, string body, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail_Basic", new object[] {
                        to,
                        subject,
                        body,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail_BasicAsync(string to, string subject, string body, string azureWebhookURL) {
            this.SendMail_BasicAsync(to, subject, body, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMail_BasicAsync(string to, string subject, string body, string azureWebhookURL, object userState) {
            if ((this.SendMail_BasicOperationCompleted == null)) {
                this.SendMail_BasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail_BasicOperationCompleted);
            }
            this.InvokeAsync("SendMail_Basic", new object[] {
                        to,
                        subject,
                        body,
                        azureWebhookURL}, this.SendMail_BasicOperationCompleted, userState);
        }
        
        private void OnSendMail_BasicOperationCompleted(object arg) {
            if ((this.SendMail_BasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail_BasicCompleted(this, new SendMail_BasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail_CcAndBcc", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail_CcAndBcc(string to, string subject, string body, string cc, string bcc, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail_CcAndBcc", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail_CcAndBccAsync(string to, string subject, string body, string cc, string bcc, string azureWebhookURL) {
            this.SendMail_CcAndBccAsync(to, subject, body, cc, bcc, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMail_CcAndBccAsync(string to, string subject, string body, string cc, string bcc, string azureWebhookURL, object userState) {
            if ((this.SendMail_CcAndBccOperationCompleted == null)) {
                this.SendMail_CcAndBccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail_CcAndBccOperationCompleted);
            }
            this.InvokeAsync("SendMail_CcAndBcc", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        azureWebhookURL}, this.SendMail_CcAndBccOperationCompleted, userState);
        }
        
        private void OnSendMail_CcAndBccOperationCompleted(object arg) {
            if ((this.SendMail_CcAndBccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail_CcAndBccCompleted(this, new SendMail_CcAndBccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail_DefaultSignature", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail_DefaultSignature(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail_DefaultSignature", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail_DefaultSignatureAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string azureWebhookURL) {
            this.SendMail_DefaultSignatureAsync(to, subject, body, cc, bcc, includeDefaultSignature, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMail_DefaultSignatureAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string azureWebhookURL, object userState) {
            if ((this.SendMail_DefaultSignatureOperationCompleted == null)) {
                this.SendMail_DefaultSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail_DefaultSignatureOperationCompleted);
            }
            this.InvokeAsync("SendMail_DefaultSignature", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        azureWebhookURL}, this.SendMail_DefaultSignatureOperationCompleted, userState);
        }
        
        private void OnSendMail_DefaultSignatureOperationCompleted(object arg) {
            if ((this.SendMail_DefaultSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail_DefaultSignatureCompleted(this, new SendMail_DefaultSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail_Attachments", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail_Attachments(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string fileNames, string attachmentBase64Strings, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail_Attachments", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        fileNames,
                        attachmentBase64Strings,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail_AttachmentsAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string fileNames, string attachmentBase64Strings, string azureWebhookURL) {
            this.SendMail_AttachmentsAsync(to, subject, body, cc, bcc, includeDefaultSignature, fileNames, attachmentBase64Strings, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMail_AttachmentsAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, string fileNames, string attachmentBase64Strings, string azureWebhookURL, object userState) {
            if ((this.SendMail_AttachmentsOperationCompleted == null)) {
                this.SendMail_AttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail_AttachmentsOperationCompleted);
            }
            this.InvokeAsync("SendMail_Attachments", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        fileNames,
                        attachmentBase64Strings,
                        azureWebhookURL}, this.SendMail_AttachmentsOperationCompleted, userState);
        }
        
        private void OnSendMail_AttachmentsOperationCompleted(object arg) {
            if ((this.SendMail_AttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail_AttachmentsCompleted(this, new SendMail_AttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Skanderborg.dk/xml/Schemas/SendMail_CalendarBooking", RequestNamespace="http://Skanderborg.dk/xml/Schemas", ResponseNamespace="http://Skanderborg.dk/xml/Schemas", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail_CalendarBooking(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, CalendarEventAttachmentModel calendarEvent, string azureWebhookURL) {
            object[] results = this.Invoke("SendMail_CalendarBooking", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        calendarEvent,
                        azureWebhookURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMail_CalendarBookingAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, CalendarEventAttachmentModel calendarEvent, string azureWebhookURL) {
            this.SendMail_CalendarBookingAsync(to, subject, body, cc, bcc, includeDefaultSignature, calendarEvent, azureWebhookURL, null);
        }
        
        /// <remarks/>
        public void SendMail_CalendarBookingAsync(string to, string subject, string body, string cc, string bcc, bool includeDefaultSignature, CalendarEventAttachmentModel calendarEvent, string azureWebhookURL, object userState) {
            if ((this.SendMail_CalendarBookingOperationCompleted == null)) {
                this.SendMail_CalendarBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMail_CalendarBookingOperationCompleted);
            }
            this.InvokeAsync("SendMail_CalendarBooking", new object[] {
                        to,
                        subject,
                        body,
                        cc,
                        bcc,
                        includeDefaultSignature,
                        calendarEvent,
                        azureWebhookURL}, this.SendMail_CalendarBookingOperationCompleted, userState);
        }
        
        private void OnSendMail_CalendarBookingOperationCompleted(object arg) {
            if ((this.SendMail_CalendarBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMail_CalendarBookingCompleted(this, new SendMail_CalendarBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Skanderborg.dk/xml/Schemas")]
    public partial class AzureMailModel {
        
        private string toField;
        
        private string subjectField;
        
        private string bodyField;
        
        private string ccField;
        
        private string bccField;
        
        private string includeDefaultSignaturField;
        
        private string fileNamesField;
        
        private string attachmentBase64StringsField;
        
        /// <remarks/>
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string Cc {
            get {
                return this.ccField;
            }
            set {
                this.ccField = value;
            }
        }
        
        /// <remarks/>
        public string Bcc {
            get {
                return this.bccField;
            }
            set {
                this.bccField = value;
            }
        }
        
        /// <remarks/>
        public string IncludeDefaultSignatur {
            get {
                return this.includeDefaultSignaturField;
            }
            set {
                this.includeDefaultSignaturField = value;
            }
        }
        
        /// <remarks/>
        public string FileNames {
            get {
                return this.fileNamesField;
            }
            set {
                this.fileNamesField = value;
            }
        }
        
        /// <remarks/>
        public string AttachmentBase64Strings {
            get {
                return this.attachmentBase64StringsField;
            }
            set {
                this.attachmentBase64StringsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Skanderborg.dk/xml/Schemas")]
    public partial class CalendarEventAttachmentModel {
        
        private string eventSummaryField;
        
        private System.DateTime eventStartDateTimeField;
        
        private System.DateTime eventEndDateTimeField;
        
        private bool eventIsAllDayField;
        
        private string eventDescriptionField;
        
        private string eventLocationField;
        
        private string eventAttachmentFileNameField;
        
        /// <remarks/>
        public string EventSummary {
            get {
                return this.eventSummaryField;
            }
            set {
                this.eventSummaryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventStartDateTime {
            get {
                return this.eventStartDateTimeField;
            }
            set {
                this.eventStartDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventEndDateTime {
            get {
                return this.eventEndDateTimeField;
            }
            set {
                this.eventEndDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool EventIsAllDay {
            get {
                return this.eventIsAllDayField;
            }
            set {
                this.eventIsAllDayField = value;
            }
        }
        
        /// <remarks/>
        public string EventDescription {
            get {
                return this.eventDescriptionField;
            }
            set {
                this.eventDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string EventLocation {
            get {
                return this.eventLocationField;
            }
            set {
                this.eventLocationField = value;
            }
        }
        
        /// <remarks/>
        public string EventAttachmentFileName {
            get {
                return this.eventAttachmentFileNameField;
            }
            set {
                this.eventAttachmentFileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMail_BasicCompletedEventHandler(object sender, SendMail_BasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail_BasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail_BasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMail_CcAndBccCompletedEventHandler(object sender, SendMail_CcAndBccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail_CcAndBccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail_CcAndBccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMail_DefaultSignatureCompletedEventHandler(object sender, SendMail_DefaultSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail_DefaultSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail_DefaultSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMail_AttachmentsCompletedEventHandler(object sender, SendMail_AttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail_AttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail_AttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMail_CalendarBookingCompletedEventHandler(object sender, SendMail_CalendarBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMail_CalendarBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMail_CalendarBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591